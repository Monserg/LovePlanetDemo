
//  UsersListShowInteractor.swift
//  LovePlanetDemo
//
//  Created by msm72 on 21.09.17.
//  Copyright (c) 2017 RemoteJob. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

// MARK: - Business Logic protocols
protocol UsersListShowBusinessLogic {
    func usersListLoad(withRequestModel requestModel: UsersListShowModels.Users.RequestModel)
    func userDelete(withRequestModel requestModel: UsersListShowModels.Users.RequestModel)
}

protocol UsersListShowDataStore {
    var dataSource: [User] { get set }
}

class UsersListShowInteractor: UsersListShowBusinessLogic, UsersListShowDataStore {
    // MARK: - Properties
    var presenter: UsersListShowPresentationLogic?
    var worker: UsersListShowWorker?
    var dataSource: [User] = [User]()
    
    
    // MARK: - Business logic implementation
    func usersListLoad(withRequestModel requestModel: UsersListShowModels.Users.RequestModel) {
        worker = UsersListShowWorker()
        
        // Use by clean CoreData
//        worker?.usersListClear()
        
        if let usersList = CoreDataManager.instance.entitiesLoad(byName: "User", andSortParameter: requestModel.sortIndex) as? [User], usersList.count > 0 {
            dataSource = usersList
        } else {
            // Add new users to CoreData
            for i in 0...29 {
                let userEntity = CoreDataManager.instance.entityCreate(byName: "User") as! User
                userEntity.setup(codeID: Int16(i), firstName: "Stepan", lastName: "Sidorov \(i)", isFemale: true, birthday: NSDate())
                CoreDataManager.instance.contextSave()
                dataSource.append(userEntity)
            }
        }
        
        let responseModel = UsersListShowModels.Users.ResponseModel(dataSource: dataSource)
        presenter?.usersListPreparePresent(fromResponseModel: responseModel)
    }
    
    func userDelete(withRequestModel requestModel: UsersListShowModels.Users.RequestModel) {
        worker = UsersListShowWorker()
        
        worker?.userDelete(withCodeID: "\(requestModel.sortIndex)")
        CoreDataManager.instance.contextSave()
        
        let responseModel = UsersListShowModels.Users.ResponseModel(dataSource: dataSource)
        presenter?.userDeletePreparePresent(fromResponseModel: responseModel)
    }
}
