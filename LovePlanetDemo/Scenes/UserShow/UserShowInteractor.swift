//
//  UserShowInteractor.swift
//  LovePlanetDemo
//
//  Created by msm72 on 21.09.17.
//  Copyright (c) 2017 RemoteJob. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// MARK: - Business Logic protocols
protocol UserShowBusinessLogic {
    func userSave(withRequestModel requestModel: UserShowModels.User.RequestModel)
    func userCreate(withRequestModel requestModel: UserShowModels.User.RequestModel)
}

protocol UserShowDataStore {
    var user: User? { get set }
}

class UserShowInteractor: UserShowBusinessLogic, UserShowDataStore {
    // MARK: - Properties
    var presenter: UserShowPresentationLogic?
    var worker: UserShowWorker?
    var user: User?
    
    
    // MARK: - Business logic implementation
    func userSave(withRequestModel requestModel: UserShowModels.User.RequestModel) {
        worker = UserShowWorker()

        let userEntity = CoreDataManager.instance.entityBy("User", andCodeID: requestModel.formFields.codeID!) as! User
        userEntity.firstName = requestModel.formFields.firstName
        userEntity.lastName = requestModel.formFields.lastName
        userEntity.isFemale = requestModel.formFields.isFemale
        userEntity.birthday = requestModel.formFields.birthday as NSDate
        
        CoreDataManager.instance.contextSave()
        
        let responseModel = UserShowModels.User.ResponseModel()
        presenter?.userSavePreparePresent(fromResponseModel: responseModel)
    }

    func userCreate(withRequestModel requestModel: UserShowModels.User.RequestModel) {
        worker = UserShowWorker()

        let codeID = CoreDataManager.instance.entityLoadCodeIDMax(byName: "User")
        let userEntity = CoreDataManager.instance.entityCreate(byName: "User") as! User
        userEntity.codeID = codeID + 1
        userEntity.firstName = requestModel.formFields.firstName
        userEntity.lastName = requestModel.formFields.lastName
        userEntity.isFemale = requestModel.formFields.isFemale
        userEntity.birthday = requestModel.formFields.birthday as NSDate
        
        CoreDataManager.instance.contextSave()

        let responseModel = UserShowModels.User.ResponseModel()
        presenter?.userCreatePreparePresent(fromResponseModel: responseModel)
    }
}
